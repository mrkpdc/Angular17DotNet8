version: '3.4'

services:
  #angular17_net8_jwt_sqlserver:
  #  image: angular17_net8_jwt_sqlserver
  #  container_name: angular17_net8_jwt_sqlserver
  #  build: 
  #    context: ./var/database/SQLServer
  #    dockerfile: ./Dockerfile
  #  volumes:
  #    - angular17_net8_jwt_sqlserver_data:/var/opt/mssql
  #  ports:
  #    - 1433:1433
  angular17_net8_jwt_sqlserver:
    image: angular17_net8_jwt_sqlserver
    container_name: angular17_net8_jwt_sqlserver
    build: 
      context: ./var/database/SQLServer_NoScripts
      dockerfile: ./Dockerfile
    volumes:
      - angular17_net8_jwt_sqlserver_data:/var/opt/mssql
    ports:
      - 1433:1433

  angular17_net8_jwt_be:
    image: angular17_net8_jwt_be
    container_name: angular17_net8_jwt_be
    build:
      context: ./be
      dockerfile: ./Dockerfile
    ports:
      - 5179:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__1__Name=File
      - Serilog__WriteTo__1__Args__path=Logs\\Logs.txt
      - Serilog__WriteTo__1__Args__outputTemplate={Timestamp} {Message}{NewLine:1}{Exception:1}
      - Serilog__WriteTo__1__Args__rollingInterval=Day
      - Serilog__WriteTo__2__Name=MSSqlServer
      - Serilog__WriteTo__2__Args__connectionString=Server=angular17_net8_jwt_sqlserver;Database=AuthDB;User id=sa;Password=Password01!;TrustServerCertificate=True
      - Serilog__WriteTo__2__Args__tableName=Logs
      - Serilog__WriteTo__2__Args__AutoCreateSqlTable=True     
      - ConnectionStrings__AuthDB_SQLServer=Server=angular17_net8_jwt_sqlserver;Database=AuthDB;User id=sa;Password=Password01!;TrustServerCertificate=True;
    links:
      - angular17_net8_jwt_sqlserver

  angular17_net8_jwt_fe:
    image: angular17_net8_jwt_fe
    container_name: angular17_net8_jwt_fe
    build:
      context: ./fe
      dockerfile: ./Dockerfile
    ports: 
      - 4200:80
    links:
      - angular17_net8_jwt_be

  angular17_net8_jwt_prometheus:
    image: prom/prometheus:v2.48.0
    container_name: angular17_net8_jwt_prometheus
    #ports:
    #  - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./var/monitoring/prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml:ro
      - angular17_net8_jwt_prometheus_data:/prometheus
    #restart: unless-stopped

  #questo è per le risorse dei containers in linux
  angular17_net8_jwt_cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0     
    container_name: angular17_net8_jwt_cadvisor
    #ports:
    #  - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    #restart: unless-stopped

  #questo è per le risorse di sistema in linux
  angular17_net8_jwt_node_exporter:
   image: quay.io/prometheus/node-exporter:v1.5.0
   container_name: angular17_net8_jwt_node_exporter
   command: "--path.rootfs=/host"
   pid: host
   #restart: unless-stopped
   volumes:
     - /:/host:ro,rslave

  angular17_net8_jwt_grafana:
    image: grafana/grafana-oss:10.2.2
    container_name: angular17_net8_jwt_grafana
    ports:
      - "3000:3000"
    volumes:
      - angular17_net8_jwt_grafana_data:/var/lib/grafana
    #restart: unless-stopped

volumes:
  angular17_net8_jwt_sqlserver_data:
  angular17_net8_jwt_prometheus_data:
    #driver: local
  angular17_net8_jwt_grafana_data:
    #driver: local  